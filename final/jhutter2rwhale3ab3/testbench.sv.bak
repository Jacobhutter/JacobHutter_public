module testbench();

timeunit 10ns;	// Half clock cycle at 50 MHz
			// This is the amount of time represented by #1
timeprecision 1ns;

// These signals are internal because the processor will be
// instantiated as a submodule in testbench.
logic Clk = 0;
/*module keycode_state_machine( input Clk, input Reset,
							 input [15:0] keycode,
							 output step_enable_a,
							 output step_enable_s,
							 output step_enable_d*/
logic Reset;
logic flag;
assign flag = data_connect & 6'b111100;


logic connect_a;
logic [5:0] data_connect;

// To store expected results

// A counter to count the instances where simulation results
// do no match with expected results

// Instantiating the DUT
// Make sure the module and signal names match with those in your design
//aes_controller as(.clk(Clk),.*);
//slc3 lc(.*);
/*module  square (input Reset, Clk,
					input [15:0] keycode,
					input a_enable,s_enable,d_enable,
               output [9:0]  SQUAREX, SQUAREY, SQUARE_Size_x, SQUARE_Size_y );*/

reg6 r6(.Clk(Clk),.Reset(Reset),.D(data_connect),.Data_Out(data_connect));

// Toggle the clock
// #1 means wait for a delay of 1 timeunit
always begin : CLOCK_GENERATION
#1 Clk = ~Clk;
end

initial begin: CLOCK_INITIALIZATION
    Clk = 0;
end

// Testing begins here
// The initial block is not synthesizable
// Everything happens sequentially inside an initial block
// as in a software program
initial begin: TEST_VECTORS
#2 Reset = 1'b0;
#2 Reset = 1'b1;
#2 Reset = 1'b0;


end
endmodule
