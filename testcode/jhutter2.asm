ORIGIN 0
SEGMENT
CodeSegment: ; Test code modified to verify certain instructions
	LEA R0, DataSegment
	STR R5, R0, RES10
	LDR R5, R0, BADBAD
	TRAP Bear	; tests trap
	LEA R1, DataSegment2
	ADD R2, R2,  7
	ADD R3, R3,  8
	STB R2, R1, -7 ; try to recover the stored bytes individually
	STB R3, R1, -8
	LDB R4, R1, -7
	LDB R5, R1, -8
	NOT R4, R4
	ADD R4, R4, 1
	NOT R5, R5
	ADD R5, R5, 1
	ADD R2, R2, R4
	BRNP FAIL
	ADD R3, R3, R5
	BRNP FAIL
	ADD R5, R5, 5
	LEA R0, DataSegment
	STI R5, R0, RES8  ; test ldi sti 
	LDI R4, R0, RES8
	NOT R4, R4
	ADD R4, R4, 1
	ADD R5, R5, R4
	BRNP FAIL
	
SUCCESS:
	BRNZP SUCCESS

FAIL:
	BRNZP FAIL

SEGMENT        DataSegment:
ZERO:	 DATA2 0
ONETWELVE:	 DATA2 112
ENT:	DATA2 10
NINER:	DATA2 9999
GECKO:	DATA2 42
NOT6:	DATA2 4xBAC8
THREE:	DATA2 7
TREE:	DATA2 3
BADBAD:	DATA2 4x0BAD
PAT1:	DATA2 4x0D0D
PAT2:	DATA2 4x9884
PAT3:	DATA2 4xAE85
GOOD:	DATA2 4x5460
five:	DATA2 5
TT:	DATA2 4x646
RES1:	DATA2 0;
RES2:	DATA2 0;
RES3:	DATA2 0;
RES4:	DATA2 0;
RES5:	DATA2 0
RES6:	DATA2 0;
RES7:	DATA2 0;
RES8:	DATA2 0;
RES9:	DATA2 0;
RES10:	DATA2 0;
RES11:	DATA2 0;
RES12:	DATA2 0;
RES13:	DATA2 0;
RES14:	DATA2 0;
RES15:	DATA2 0
RES16:	DATA2 0;
SEGMENT DataSegment2:
RES17:	DATA2 0
RES18:	DATA2 0
RES19:	DATA2 0
Bear:	DATA2 CatchMe
CatchMe:LDR R5, R0, PAT3
	NOT R5, R5
	RET
PRODUCT:DATA2 0

